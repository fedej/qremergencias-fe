/**
 * QR Emergencias WS
 * API Rest QR Emergencias
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UserProfileDTO from '../model/UserProfileDTO';

/**
* Profilecontroller service.
* @module api/ProfilecontrollerApi
* @version 1.0.0
*/
export default class ProfilecontrollerApi {

    /**
    * Constructs a new ProfilecontrollerApi. 
    * @alias module:api/ProfilecontrollerApi
    * @class
    * @param {module:ApiClient} apiClient Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * list
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/UserProfileDTO} and HTTP response
     */
    listUsingGET1WithHttpInfo() {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = UserProfileDTO;

      return this.apiClient.callApi(
        '/api/profile', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * list
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserProfileDTO}
     */
    listUsingGET1() {
      return this.listUsingGET1WithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * update
     * @param {module:model/UserProfileDTO} userProfileDTO userProfileDTO
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    updateUsingPATCH1WithHttpInfo(userProfileDTO) {
      let postBody = userProfileDTO;

      // verify the required parameter 'userProfileDTO' is set
      if (userProfileDTO === undefined || userProfileDTO === null) {
        throw new Error("Missing the required parameter 'userProfileDTO' when calling updateUsingPATCH1");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/profile', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * update
     * @param {module:model/UserProfileDTO} userProfileDTO userProfileDTO
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    updateUsingPATCH1(userProfileDTO) {
      return this.updateUsingPATCH1WithHttpInfo(userProfileDTO)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
