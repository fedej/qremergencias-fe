/**
 * QR Emergencias WS
 * API Rest QR Emergencias
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EmergencyDataDTO from '../model/EmergencyDataDTO';
import PageOfEmergencyDataDTO from '../model/PageOfEmergencyDataDTO';

/**
* Emergencydatacontroller service.
* @module api/EmergencydatacontrollerApi
* @version 1.0.0
*/
export default class EmergencydatacontrollerApi {

    /**
    * Constructs a new EmergencydatacontrollerApi. 
    * @alias module:api/EmergencydatacontrollerApi
    * @class
    * @param {module:ApiClient} apiClient Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * create
     * @param {module:model/EmergencyDataDTO} emergencyDataDTO emergencyDataDTO
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    createUsingPOSTWithHttpInfo(emergencyDataDTO) {
      let postBody = emergencyDataDTO;

      // verify the required parameter 'emergencyDataDTO' is set
      if (emergencyDataDTO === undefined || emergencyDataDTO === null) {
        throw new Error("Missing the required parameter 'emergencyDataDTO' when calling createUsingPOST");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/emergencyData', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * create
     * @param {module:model/EmergencyDataDTO} emergencyDataDTO emergencyDataDTO
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    createUsingPOST(emergencyDataDTO) {
      return this.createUsingPOSTWithHttpInfo(emergencyDataDTO)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * list
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Results page you want to retrieve (0..N)
     * @param {Number} opts.size Number of records per page
     * @param {Array.<String>} opts.sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PageOfEmergencyDataDTO} and HTTP response
     */
    listUsingGETWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'size': opts['size'],
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = PageOfEmergencyDataDTO;

      return this.apiClient.callApi(
        '/api/emergencyData', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * list
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Results page you want to retrieve (0..N)
     * @param {Number} opts.size Number of records per page
     * @param {Array.<String>} opts.sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PageOfEmergencyDataDTO}
     */
    listUsingGET(opts) {
      return this.listUsingGETWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
