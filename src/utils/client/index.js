/**
 * QR Emergencias WS
 * API Rest QR Emergencias
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiError from './model/ApiError';
import ApiFieldError from './model/ApiFieldError';
import ChangeDTO from './model/ChangeDTO';
import ChangesDTO from './model/ChangesDTO';
import CreateUserDTO from './model/CreateUserDTO';
import EmergencyDataDTO from './model/EmergencyDataDTO';
import FileDTO from './model/FileDTO';
import GeneralDataDTO from './model/GeneralDataDTO';
import HospitalizationDTO from './model/HospitalizationDTO';
import InputStream from './model/InputStream';
import LoginUserDTO from './model/LoginUserDTO';
import MedicalRecordChangeDTO from './model/MedicalRecordChangeDTO';
import MedicalRecordDTO from './model/MedicalRecordDTO';
import MedicationDTO from './model/MedicationDTO';
import PageOfChangesDTO from './model/PageOfChangesDTO';
import PageOfMedicalRecordDTO from './model/PageOfMedicalRecordDTO';
import PathologyDTO from './model/PathologyDTO';
import Sort from './model/Sort';
import UserContactDTO from './model/UserContactDTO';
import UserProfileDTO from './model/UserProfileDTO';
import EmergencyDataControllerApi from './api/EmergencyDataControllerApi';
import HeaderCheckControllerApi from './api/HeaderCheckControllerApi';
import MedicalRecordControllerApi from './api/MedicalRecordControllerApi';
import ProfileControllerApi from './api/ProfileControllerApi';
import TempCodeControllerApi from './api/TempCodeControllerApi';
import UserFrontControllerApi from './api/UserFrontControllerApi';


/**
* API_Rest_QR_Emergencias.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var QrEmergenciasWs = require('index'); // See note below*.
* var xxxSvc = new QrEmergenciasWs.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new QrEmergenciasWs.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new QrEmergenciasWs.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new QrEmergenciasWs.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiError model constructor.
     * @property {module:model/ApiError}
     */
    ApiError,

    /**
     * The ApiFieldError model constructor.
     * @property {module:model/ApiFieldError}
     */
    ApiFieldError,

    /**
     * The ChangeDTO model constructor.
     * @property {module:model/ChangeDTO}
     */
    ChangeDTO,

    /**
     * The ChangesDTO model constructor.
     * @property {module:model/ChangesDTO}
     */
    ChangesDTO,

    /**
     * The CreateUserDTO model constructor.
     * @property {module:model/CreateUserDTO}
     */
    CreateUserDTO,

    /**
     * The EmergencyDataDTO model constructor.
     * @property {module:model/EmergencyDataDTO}
     */
    EmergencyDataDTO,

    /**
     * The FileDTO model constructor.
     * @property {module:model/FileDTO}
     */
    FileDTO,

    /**
     * The GeneralDataDTO model constructor.
     * @property {module:model/GeneralDataDTO}
     */
    GeneralDataDTO,

    /**
     * The HospitalizationDTO model constructor.
     * @property {module:model/HospitalizationDTO}
     */
    HospitalizationDTO,

    /**
     * The InputStream model constructor.
     * @property {module:model/InputStream}
     */
    InputStream,

    /**
     * The LoginUserDTO model constructor.
     * @property {module:model/LoginUserDTO}
     */
    LoginUserDTO,

    /**
     * The MedicalRecordChangeDTO model constructor.
     * @property {module:model/MedicalRecordChangeDTO}
     */
    MedicalRecordChangeDTO,

    /**
     * The MedicalRecordDTO model constructor.
     * @property {module:model/MedicalRecordDTO}
     */
    MedicalRecordDTO,

    /**
     * The MedicationDTO model constructor.
     * @property {module:model/MedicationDTO}
     */
    MedicationDTO,

    /**
     * The PageOfChangesDTO model constructor.
     * @property {module:model/PageOfChangesDTO}
     */
    PageOfChangesDTO,

    /**
     * The PageOfMedicalRecordDTO model constructor.
     * @property {module:model/PageOfMedicalRecordDTO}
     */
    PageOfMedicalRecordDTO,

    /**
     * The PathologyDTO model constructor.
     * @property {module:model/PathologyDTO}
     */
    PathologyDTO,

    /**
     * The Sort model constructor.
     * @property {module:model/Sort}
     */
    Sort,

    /**
     * The UserContactDTO model constructor.
     * @property {module:model/UserContactDTO}
     */
    UserContactDTO,

    /**
     * The UserProfileDTO model constructor.
     * @property {module:model/UserProfileDTO}
     */
    UserProfileDTO,

    /**
    * The EmergencyDataControllerApi service constructor.
    * @property {module:api/EmergencyDataControllerApi}
    */
    EmergencyDataControllerApi,

    /**
    * The HeaderCheckControllerApi service constructor.
    * @property {module:api/HeaderCheckControllerApi}
    */
    HeaderCheckControllerApi,

    /**
    * The MedicalRecordControllerApi service constructor.
    * @property {module:api/MedicalRecordControllerApi}
    */
    MedicalRecordControllerApi,

    /**
    * The ProfileControllerApi service constructor.
    * @property {module:api/ProfileControllerApi}
    */
    ProfileControllerApi,

    /**
    * The TempCodeControllerApi service constructor.
    * @property {module:api/TempCodeControllerApi}
    */
    TempCodeControllerApi,

    /**
    * The UserFrontControllerApi service constructor.
    * @property {module:api/UserFrontControllerApi}
    */
    UserFrontControllerApi
};
